//noinspection GrPackage

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    //  Currently (2022/03/24) it is not possible to match buildToolsVersion with compileSdkVersion:
    //  - buildToolsVersion 31.0.0 is marked as corrupted
    //  - Setting compileSdkVersion to 30 raises a dependency error
    compileSdkVersion(31)
    buildToolsVersion = "30.0.3"

    defaultConfig {
        minSdkVersion(16)
        targetSdkVersion(31)

        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName

        applicationId "io.didomi.flutter.sample"
        multiDexEnabled = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    packagingOptions {
        // Required for minSdkVersion < 21
        exclude("androidsupportmultidexversion.txt")
    }

    sourceSets {
        // AndroidTest source must remains in Java for the moment (flutter 2.2.0)
        main.java.srcDirs += "src/main/kotlin"
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation "com.google.code.gson:gson:2.8.8"

    testImplementation("junit:junit:4.12") // Must match flutter dependencies

    // https://developer.android.com/jetpack/androidx/releases/test/#1.2.0
    androidTestImplementation("androidx.test:runner:1.2.0") // Must match flutter dependencies
    androidTestImplementation("androidx.test.espresso:espresso-core:3.2.0") // Must match flutter dependencies
}

/**
 * Gradle task for running all integration tests sequentially (with espresso)
 */
tasks.register("bulk") {
    doLast {
        file("../../integration_test").eachFileMatch(groovy.io.FileType.FILES, ~/^.+\.dart$/, { file ->
            exec {
                commandLine(
                        "../gradlew",
                        "connectedAndroidTest",
                        "-Ptarget=$file"
                )
            }
        })
    }
}
