name: Update

# Triggered manually or on release creation
on:
  workflow_dispatch:
    inputs:
      increment:
        description: "Increment (major, minor, patch)"
        required: true
        default: "patch"
      force:
        description: "Force update (even if sdk is up to date)"
        required: false
        default: "false"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    name: Update version and dependencies
    runs-on: macos-latest # required for pod info / update

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Check if Flutter SDK requires update
        if: github.event.inputs.force != 'true'
        run: bash .github/scripts/check_before_update.sh

      - name: Update Flutter SDK
        run: bash .github/scripts/update.sh ${{ github.event.inputs.increment }}

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          author_email: "cmp-mobile@didomi.io"
          author_name: "Auto-Bot"
          branch: ${{ github.ref }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "Update Dependencies and increment ${{ github.event.inputs.increment }} version"

  analyse:
    name: Analyse Flutter
    needs: update
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze --no-fatal-infos

  test_android:
    name: Testing Android
    needs: analyse
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      # Connect to GCloud
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      # Build and upload each scenarios to firebase
      - name: Run UI tests
        run: bash .github/scripts/uitests_for_android.sh ${GITHUB_HEAD_REF}

  test_ios:
    name: Testing iOS
    needs: analyse
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      # pod update
      - name: Run pod update
        working-directory: ./example/ios
        run: pod update

      # unlock keychain
      - name: Unlock key chain
        run: security unlock-keychain -p ${{ secrets.KEYCHAIN_PWD }} login.keychain

      # Connect to GCloud
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

      # Build and upload each scenarios to firebase
      - name: Run UI tests
        run: sh .github/scripts/uitests_for_ios.sh ${GITHUB_HEAD_REF}

  tag:
    name: Tag
    needs: [ test_ios, test_android ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Set Flutter version as ENV
        run: |
          echo "flutter_version=$(sh .github/scripts/extract_flutter_version.sh)" >> $GITHUB_ENV

      - name: Print Flutter Version
        run: |
          echo "Flutter version is: ${{ env.flutter_version }}"

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }} # Use custom token to trigger following workflows
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.flutter_version }}",
              sha: context.sha
            })
