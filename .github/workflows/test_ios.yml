name: Test iOS

# Triggered on pull request or manually
on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyse:
    name: Analyse Flutter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .
      #   run: dart format --output=none --set-exit-if-changed example

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze --no-fatal-infos

  test_ios:
    name: Testing iOS
    needs: analyse
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: arm64 # optional value for v2 (use self-hosted mac mini)

      - name: Install dependencies
        run: flutter pub get

      # pod update
      - name: Run pod update
        working-directory: ./example/ios
        run: pod update

      # unlock keychain
      - name: Unlock key chain
        run: security unlock-keychain -p ${{ secrets.KEYCHAIN_PWD }} login.keychain

      # Connect to GCloud
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # Build and upload each scenarios to firebase
      - name: Run UI tests
        run: sh .github/scripts/uitests_for_ios.sh ${GITHUB_HEAD_REF}
