name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze

      # Android APK
      - name: Build Android Sample
        working-directory: ./example
        run: flutter build apk -t lib/main.dart
      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      # iOS Runner
      - name: Build iOS Sample
        working-directory: ./example
        run: flutter build ios lib/main.dart --release
      # Upload generated runner to the artifacts.
      - uses: actions/upload-artifact@v1
        with:
          name: Runner
          path: build/ios/iphoneos/Runner

      # Connect to GCloud
      - name: Login to Google Cloud
          uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
          with:
            version: `342.0.0`
            service_account_key: ${{ secrets.GCLOUD_AUTH }}
                                   - name: Set current project
                                   run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}

      # Build and upload each scenario to firebase
      - name: Run UI tests
        run: sh ./scripts/uitests.sh
