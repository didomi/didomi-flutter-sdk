name: Test Android & iOS

# Trigger the workflow manually or after push a commit
on: [ push, workflow_dispatch ]

jobs:
#  analyse:
#    name: Analyse Flutter
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: "stable"
#
#      - name: Install dependencies
#        run: flutter pub get
#
#      # Uncomment this step to verify the use of 'dart format' on each commit.
#      # - name: Verify formatting
#      #   run: dart format --output=none --set-exit-if-changed .
#      #   run: dart format --output=none --set-exit-if-changed example
#
#      # Consider passing '--fatal-infos' for slightly stricter analysis.
#      - name: Analyze project source
#        run: flutter analyze --no-fatal-infos

  # job responsible for running Flutter tests on iOS devices
  ios:
#    needs: analyse
    runs-on: macos-latest
    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"

      - name: "Start Simulator"
        # the command "xcrun simctl boot" expects a device identifier
        # the assignment of the UDID variable consists of retrieving the ID of the simulator
        # by extracting it from the command "xcrun xctrace list devices"
        run: |
          UDID=$(xcrun xctrace list devices | grep "^iPhone SE (3rd generation) Simulator" | awk '{gsub(/[()]/,""); print $NF}')
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"

      - uses: actions/checkout@v3
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Run integration tests
        run: bash .github/scripts/test.sh "${UDID}"

  # job responsible for running Flutter tests on Android devices
  android:
#    needs: analyse
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Run integration tests
        # more info on https://github.com/ReactiveCircus/android-emulator-runner
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          profile: Nexus 6
          script: bash .github/scripts/test.sh "emulator-5554"
