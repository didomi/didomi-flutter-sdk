name: Test Android & iOS

# Trigger the workflow manually or after push a commit
on: [ pull_request, workflow_dispatch ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyse:
    name: Analyse Flutter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .
      #   run: dart format --output=none --set-exit-if-changed example

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: flutter analyze --no-fatal-infos

  # job responsible for running Flutter tests on iOS devices
  ios:
    name: Testing iOS
    needs: analyse
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: arm64 # optional value for v2 (use self-hosted mac mini)

      - name: Install dependencies
        run: flutter pub get

      - name: Run pod update
        working-directory: ./example/ios
        run: pod update

      - name: List all simulators
        run: xcrun xctrace list devices

      - name: Build & run all tests
        run: sh .github/scripts/uitests_for_ios.sh

      - name: Archive test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs_ios
          path: example/machine.log

  # job responsible for running Flutter tests on Android devices
  android:
    name: Testing Android
    needs: analyse
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: arm64 # optional value for v2 (use self-hosted mac mini)

      - name: Install dependencies
        run: flutter pub get

      - name: Build & run all tests
        run: sh .github/scripts/uitests_for_android.sh

      - name: Archive test results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs_android
          path: example/machine.log
